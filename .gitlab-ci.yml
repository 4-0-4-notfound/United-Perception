image: "registry.sensetime.com/spring/dka:pytorch1.5.0_fix"

before_script:
  - gcc --version
  - nvcc --version
  - nvidia-smi
  - python -c "import torch; print(torch.__version__);"
  - python -c "from torch.utils.collect_env import get_pretty_env_info; print(get_pretty_env_info())"
  - python -c "from spring import nart"


style:
  tags:
    - gpu
  stage: build
  script:
    - pip install flake8
    - flake8 .
  except:
    - schedules

test:
  tags:
    - gpu
  stage: test
  script:
    - export TORCH_CUDA_ARCH_LIST='3.5;5.0+PTX;6.0;7.0'
    - pip uninstall -y nart_tools
    - pip uninstall -y nart==0.2.4
    - pip uninstall -y springvision==1.0.1
    - pip uninstall -y kestrel==1.5.4-patch1
    - pip install -r requirements.txt -i https://pkg.sensetime.com/repository/pypi-proxy/simple/ --trusted-host pkg.sensetime.com
    - export MAX_JOBS=8
    - python setup.py build_ext -i
    - coverage erase
    - pip install http://spring.sensetime.com/pypi/packages/spring-0.6.0+cu101.torch150.mvapich2.nartgpu-cp37-cp37m-linux_x86_64.whl -i https://pkg.sensetime.com/repository/pypi-proxy/simple/ --trusted-host spring.sensetime.com 
    - pip install einops -i https://pkg.sensetime.com/repository/pypi-proxy/simple/ --trusted-host pkg.sensetime.com 
    # det essos
    - ROOT=. PYTHONPATH=$ROOT:$PYTHONPATH python -m up to_kestrel --config=configs/det/deploy/retinanet-r18_1x_essos.yaml --save_to=kestrel_model_essos --backend=dist
    # cls classifier
    - ROOT=. PYTHONPATH=$ROOT:$PYTHONPATH python -m up to_kestrel --config=configs/cls/deploy/res18_deploy.yaml --save_to=kestrel_model_classifier --backend=dist
    # seg psyche
    - ROOT=. PYTHONPATH=$ROOT:$PYTHONPATH python -m up to_kestrel --config=configs/seg/deploy/pspnet_psyche.yaml --save_to=kestrel_model_psyche --backend=dist
    # kp raven
    - ROOT=. PYTHONPATH=$ROOT:$PYTHONPATH python -m up to_kestrel --config=configs/kp/res50_sb_raven.yaml --save_to=kestrel_model_raven --backend=dist
    # - PYTHONWARNINGS=ignore PYTHONPATH=.:./patches:$PYTHONPATH coverage run -m unittest discover tests -p 'test_[!t]*py'
    # - coverage report -i --rcfile .coveragerc
  only:
    - schedules

docs:
    tags:
      - gpu
    stage: deploy
    script:
    - export MAX_JOBS=8
    - pip install sphinx==1.5.6 -i https://pkg.sensetime.com/repository/pypi-proxy/simple/ --trusted-host pkg.sensetime.com
    - pip install docutils==0.17.1 -i https://pkg.sensetime.com/repository/pypi-proxy/simple/ --trusted-host pkg.sensetime.com
    - pip install http://spring.sensetime.com/pypi/packages/sphinx_rtd_theme-0.4.3-py2.py3-none-any.whl
    - pip install http://spring.sensetime.com/pypi/packages/sphinxcontrib_versioning-2.2.1-py3-none-any.whl
    - git --version
    - export PYTHONPATH=.:$PYTHONPATH
    - sphinx-versioning build docs/source docs/_build/html
    - sshpass -p springpypi ssh -o 'StrictHostKeyChecking no' -p 10000 spring@10.10.40.93 'if [ -d ~/up ]; then mv ~/up ~/up_bak; fi'
    - sshpass -p springpypi scp -o 'StrictHostKeyChecking no' -P 10000 -r docs/_build/html spring@10.10.40.93:~/up
    - sshpass -p springpypi ssh -o 'StrictHostKeyChecking no' -p 10000 spring@10.10.40.93 'if [ -d ~/up_bak ]; then rm -r ~/up_bak; fi'
    - echo "update up docs done"
    only:
    - schedules
