Release History
===============

v0.3.0
-------

External dependency version
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* Spring2 0.6.0
* Cluster environment s0.3.3 / s0.3.4


Breaking Changes
^^^^^^^^^^^^^^^^

* This update deprecates 'save_to' setting for deployment and sets it by command-line method, taking tokestrel script as an example：

  .. code-block:: bash

    python -m up to_kestrel \
      --config=xxx.yaml \
      --save_to=kestrel_model \
      2>&1 | tee log.tokestrel

  Tokestrel/toadela uses onnx format by default, and instead of caffe. If you want to use caffe, you need to set it manually. Take the detection task as an example:

  .. code-block:: yaml

    to_kestrel:
      toks_type: det
      default_confidence_thresh: 0.05
      plugin: essos   # onnx格式: essos; caffe格式: essos_caffe
      model_name: model
      version: 1.0.0
      resize_hw: 800x1333

* The parameter configuration of method get_miss_rate in custom_evaluator is modified, so that the AP value under different FPPI thresholds can be calculated in it. Drec and prec shall be added when passing in, and FPPI shall be added for the return value


Highlights
^^^^^^^^^^

* Algorithms:
    * 【3D Algorithms】
        * Support Mono3d series algorithms, FCOS3D, PGD, GUPNet and other algorithms
    * 【Lane Detection】
        * Support CondlaneNet, GANet and other algorithms
    * 【Detection】
        * Support YOLOV6, OneNet(NMS free), OTA and other algorithms
        * Support the resnet with reparameterization algorithm RepVgg

* General:
    * 【Training and Inference of Big Model】
        * Support dynamic checkpoint algorithm: Dynamically select the optimal checkpoint module for faster model training
        * Support MB series training: MB4/7/15
        * Support inference with super training list: Solved the problem of memory overflow, support breakpoint resume function
    * 【NAS】
        * Support BigNas series model search function, the optimal network structure can be selected with the cooperation of lantency speed measurement function
        * Support Meta-x, a model search method based on Reinforcement Learning
    * 【Sensedata Integration】
        * Integrate sensedata public data set. Coco and Imagenet directly use the public ceph warehouse without relying on lustre currently
    * 【Kestrel model format normalization】
        * Tokestrel/toadela uses onnx format by default, and instead of caffe. If you want to use caffe, you need to set it manually

Other Features
^^^^^^^^^^^^^^

* Support 3D detection when the number of categories is 1 and support the deploy of det_3d task
* Support the inspection of missing labels in detection task  `#80 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/80>`_
* Support using of the public dataset sensedata ceph to train, and the most commonly used coco and imagenet can directly read the public ceph warehouse
* Support group evaluator, better handle the problems of dataset with dense targets
* Support video inference `#92 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/92>`_
* Support the visualization of classification and segmentation task results in reference `#75 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/75>`_
* Support deployment using onnx model upload
* Support the weapper mode of key_replace
* Support the sampler mode of class_balance and list_balance
* Support inspector related hooks
* Support kestrel deployment of segmentor in segmentation tasks
* Support specifying compare key in eval `#77 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/77>`_
* Support bad case analysis when the specified category is ignored `#78 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/78>`_
* Support independent regression of each class of RetinaNet by adding share_location and class_first(only inference is supported) `#69 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/69>`_
* Support test resume for custom dataset and rank custom dataset
* Support specifying the pooling layer and the width of out_channel in ResNet
* Support classification post-processing quantization
* Support obtaining the samples id contained in each category and the number of samples in each category in clsdataset
* Add model_hash in doc_string of caffe_model and onnx_model
* Provide memory usage information before and after build
* Support calculation of average F1 / ACC / prec in clseval
* Support distinguishing target size for evaluation in MR eval `#70 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/70>`_
* Support grad_cam and feature map visualization
* Support gpu check `#88 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/88>`_
* Add the model_name information in the meta.json generated by deployment
* Add new example of reading sensebee data using ceph
* Support the rationality judgment of sample label and the possibility judgment of sample missing label
* Support related hooks of memory monitoring
* Support directly inference according to file list and file folder
* Support specifying latest save freq in cfg


Bug Fixes
^^^^^^^^^

* Fix the bug that the value of data_pool is empty list in cfg
* Modify the results stored in the classification task, you can selectively store all scores `#68 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/68>`_
* Fix the bug that the mode of the freeze layer in ResNet is still training after the parameter frozen `#73 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/73>`_
* Fix some typos bugs
* Fix the bug that the pretrain_model in cfg load wrong parameters
* Fix the bug caused by the existing of files in the destination path when copying files and storing ckpt in saver `#94 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/94>`_
* Fix the bug that multitast still uses sysn BN in the eval phase
* Fix the load bug when the ema value in ckpt is null
* Fix the level error bug of lr_scheduler in swin_trans cfg
* Fix the bad case analysys mismatch bug caused by the change of stored data in classification task
* Fix the mismatch bug between the vis hook document and the actual parameters `#76 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/76>`_
* Fix the bug that ema was not handled correctly when loading pod-style ResNet pretrain model `#81 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/81>`_
* Fix the bug that semantic_fpn still calculates loss in reference
* Fix the done_imgs variable in test_resume call error bug
* Fix the mismatch bug between linklink and world_size when the value of world_size is 1
* Fix the switch model bug in branch iou of retinenet `#89 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/89>`_
* Fix the bug that function calibrate track gradient by error
* Fix the bug that the deploy id and benchmark id do not match when Adela deploy
* Fix the mismatch bug of reading ckpt when inference
* Fix the mismatch bug in inference caused by different dataloader used by train and test in the cfg
* Fix the join bug when ceph reader reads files starting with '/' `#83 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/83>`_
* Fix the inplane around conv of roi_head mismatch bug
* Fic the mismatch bug between multicls and kestrel deploy
* Fix the mismatch bug caused by split bbox_head in detection and deploy tasks
* Fix the bug that the image_source get error when the value of label_mapping is none
* Fix the mismatch bug between net_info['score'] and net_graph.leaf
* Fix the bug when the value of launch is mpi

Breaking Changes
^^^^^^^^^^^^^^^^

* The parameter configuration of method get_miss_rate in custom_evaluator is modified, so that the AP value under different FPPI thresholds can be calculated in it. Drec and prec shall be added when passing in, and FPPI shall be added for the return value


v0.2.0
------

External dependency version
^^^^^^^^^^^^^^^^^^^^^^^^^^^

* Spring2 0.6.0 
* Cluster environment s0.3.3 / s0.3.4
* spring_aux-0.6.7.develop.2022_05_07t08_45.333adcd0-py3-none-any.whl

Breaking Changes
^^^^^^^^^^^^^^^^

* Structural composition of the second stage of detection is reconstructed, in order to carry out quantization and sparse training more conveniently.
* Modified model deployment config. Cfg can be inquired from here

  .. code-block:: bash
         
    # Deleted detector
    # Default config (for example, det)：
    to_kestrel:
        toks_type: det  # task type
        save_to: KESTREL  # model save path
        plugin: essos  # kestrel plugin
        ...

Highlights
^^^^^^^^^^

* Algorithms:
    * [3D detection] Support 3D Point-Pillar series such as Pointpillar,Second, CenterPoint and so on `3D benchmark <https://gitlab.bj.sensetime.com/spring2/united-perception/-/blob/master/benchmark/3d_detection_benchmark.md>`_
    * [Segmentation] Support segmentation sota: Segformer，HrNet and high performance baseline `Seg benchmark <https://gitlab.bj.sensetime.com/spring2/united-perception/-/blob/master/benchmark/semantic_benchmark.md>`_
    * [Detection] Support newest detetion distillation and improve performance largely `Det benchmark <https://gitlab.bj.sensetime.com/spring2/united-perception/-/blob/master/benchmark/distillation.md>`_

* General:
    * [Transformer] Support Vision Transformer series such as Swin-Transformer, VIT，CSWin Transformer `Cls benchmark <https://gitlab.bj.sensetime.com/spring2/united-perception/-/blob/master/benchmark/classification_benchmark.md>`_
    * [Quant and Sparse] Support Sparse training for classification and detection including Amba and Ampere ( `Spring.sparsity <https://confluence.sensetime.com/pages/viewpage.action?pageId=407432119>`_ , `Sparse benchmark <http://spring.sensetime.com/docs/sparsity/benchmark/ObjectDetection/Benchmark.html>`_ ); support quant of backbends such as TensorRT, Snpe, VITIS, and so on ( `spring.quant.online <https://mqbench.readthedocs.io/en/latest/?badge=latest>`_ ), and the one stage and two stage algorithms ( `Quant benchmark <https://gitlab.bj.sensetime.com/spring2/united-perception/-/blob/master/benchmark/quant_benchmark.md>`_ )
    * [SSL] Support self-supervise pipeline such as MOCO, SimClr, simsiam, MAE `SSL benchmark <https://gitlab.bj.sensetime.com/spring2/united-perception/-/blob/master/benchmark/ssl_benchmark.md>`_

* Useful tools:
    * [Auto deploy] Support detection, classification, segmentation, keypoint model deployment, and evaluting and publishing on Adela
    * [Large dataset training] Support large dataset training and testing on multi-task (Rank dataset) and memory-friendly interface
    * [Others] Support Chinese and English docs

New Features
^^^^^^^^^^^^

* Add Condinst FCOS
* Support task isolation by setting environment variable
* Support multi-label and multi-classifier for class task
* Support evaluating multiple test datasets respectively
* Refactor Rank dataset to support training and inferencing in classification and detection
* Large dataset memory optimization such as Real-time writing in the disk, and grouping and gathering mode.
* Support time logger for every iteration in training including data loading, preprocessing, forward, backward, gradient allreuce.
* Support Softer NMS
* Support torch Toonnx

Bug Fixes
^^^^^^^^^

* Fix no registering stitch_expand
* Fix some typos bugs
* Fix memory bugs in spconv and numba
* Fix many packages debug logger bug
* Fix can't import InterpolationMode bug `#23 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/23>`_
* Fix swin and cswin shape bug for detection
* Fix base_multicls and roi_predictor bugs in condinst while return_pos_inds = True
* Fix ema model importing in inferencing
* Fix out planes bugs in swin
* Fix meta_file bug in cls_dataset 
* Fix fp16 grad clipping bug
* Fix syncbn bug in inferencing `#33 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/33>`_
* Fix finalize bug in single gpu testing
* Fix dist backend bug
* Avoid linklink initializing and dataset building in to_kestrel `#22 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/22>`_
* Adapt model deploying for model without postprocess
* Fix ema model loading for deployment
* Fix setting different class alpha for torch_sigmoid_focal_loss
* Support auto-saving best performance model foe kitti evaluator
* Add module prefix for loss `#19 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/19>`_
* Refacting adela interface without release.json
* Fix gdbp not supporting multi-bs input
* Support setting nart config for adela deployment `#44 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/44>`_
* Fix deploying bug in RetinaHead with IoU
* Fix loading environment variable bug in time logger `#57 <https://gitlab.bj.sensetime.com/spring2/united-perception/-/issues/57>`_

Breaking Changes
^^^^^^^^^^^^^^^^

* In this version, we refactor the structure of two stage detection algorithms for better quant  and sparse training. `Faster R-CNN <https://gitlab.bj.sensetime.com/spring2/united-perception/-/tree/master/configs/det/faster_rcnn>`_ for illustration.
* Revising the parameter setting of deploying. `Deploy <https://gitlab.bj.sensetime.com/spring2/united-perception/-/tree/master/configs/det/deploy>`_ for illustration.
    * Cancel the parameter in detectors
    * Config (det for example):
        to_kestrel:
          toks_type: det  # task type
          save_to: KESTREL  # save path
          plugin: essos  # kestrel module


v0.1.0
-------

Hightlights
^^^^^^^^^^^^^^^^^^^^^

* Deployable high accuracy baselines, a complete model production process, and directly deploying and evaluting with Adela.
* Unified training task interface, which supports individual and joint training of detection, classification, key-point detection, and semantic segmentation tasks.
* Compatibility with the checkpoints of POD, Prototype, and other frameworks, making the transportation easy.
* Developing with Plugin mode, supporting custom modules.
* Simple model distillation methods.
* An unified training environment with simple training interfaces, allowing users to finish train by registering small number of modules.
* Unified file reading interfaces that support ceph, lustre, and other reading backends.
